/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */
import { Activity } from 'botframework-schema';
/**
 * The ActivityFactory
 * to generate text and then uses simple markdown semantics like chatdown to create Activity.
 */
export declare class ActivityFactory {
    private static readonly lgType;
    private static readonly errorPrefix;
    private static readonly warningPrefix;
    private static adaptiveCardType;
    private static readonly genericCardTypeMapping;
    private static readonly activityProperties;
    private static readonly cardActionProperties;
    /**
     * Generate the activity.
     * @param lgResult string result from languageGenerator.
     */
    static fromObject(lgResult: any): Partial<Activity>;
    /**
     * check the LG result before generate an Activity.
     * @param lgResult lg output.
     * @returns Diagnostic list.
     */
    static checkLGResult(lgResult: any): string[];
    /**
     * Given a lg result, create a text activity. This method will create a MessageActivity from text.
     * @param text lg text output.
     */
    private static buildActivityFromText;
    /**
     * Given a structured lg result, create an activity. This method will create an MessageActivity from object
     * @param lgValue lg output.
     */
    private static buildActivityFromLGStructuredResult;
    private static buildActivity;
    private static getSuggestions;
    private static getButtons;
    private static getCardActions;
    private static getCardAction;
    private static getAttachments;
    private static getAttachment;
    private static getNormalAttachment;
    private static getCardAttachment;
    private static normalizedToList;
    private static parseStructuredLGResult;
    private static checkStructuredResult;
    private static checkActivity;
    private static checkActivityType;
    private static checkActivityPropertyName;
    private static checkActivityProperties;
    private static checkSuggestions;
    private static checkButtons;
    private static checkCardActions;
    private static checkCardAction;
    private static checkCardActionPropertyName;
    private static checkCardActionType;
    private static checkAttachments;
    private static checkAttachment;
    private static checkCardAttachment;
    private static getStructureType;
    private static getValidBooleanValue;
    private static buildDiagnostic;
}
//# sourceMappingURL=activityFactory.d.ts.map